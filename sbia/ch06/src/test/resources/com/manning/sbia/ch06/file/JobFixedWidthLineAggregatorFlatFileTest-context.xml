<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

    <import resource="classpath:com/manning/sbia/ch06/test-batch-infrastructure-context.xml" />
    <import resource="classpath:com/manning/sbia/ch06/test-batch-reader-context.xml" />

    <job id="writeProductsJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="readWrite">
            <tasklet>
                <chunk reader="productItemReader" writer="productItemWriter" commit-interval="10" />
            </tasklet>
        </step>
    </job>

    <bean id="productItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:/com/manning/sbia/ch06/input/multi-products-delimited.txt" />
        <property name="linesToSkip" value="1" />
        <property name="lineMapper" ref="productLineMapper" />
    </bean>

    <bean id="productLineMapper" class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
        <property name="tokenizers">
            <map>
                <entry key="PRM*" value-ref="mobilePhoneProductLineTokenizer" />
                <entry key="PRB*" value-ref="bookProductLineTokenizer" />
            </map>
        </property>
        <property name="fieldSetMappers">
            <map>
                <entry key="PRM*" value-ref="mobilePhoneProductFieldSetMapper" />
                <entry key="PRB*" value-ref="bookProductFieldSetMapper" />
            </map>
        </property>
    </bean>

    <bean id="mobilePhoneProductLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value="," />
        <property name="names" value="id,name,description,manufacturer,price" />
    </bean>

    <bean id="bookProductLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value="," />
        <property name="names" value="id,name,description,publisher,price" />
    </bean>

    <bean id="mobilePhoneProductFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
        <property name="prototypeBeanName" value="mobilePhoneProduct" />
    </bean>

    <bean id="mobilePhoneProduct" class="com.manning.sbia.ch06.MobilePhoneProduct" scope="prototype" />

    <bean id="bookProductFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
        <property name="prototypeBeanName" value="bookProduct" />
    </bean>

    <bean id="bookProduct" class="com.manning.sbia.ch06.BookProduct" scope="prototype" />

    <bean id="productItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource" value="file:target/outputs/fixedwidth-lineaggregator.txt" />
        <property name="lineAggregator">
            <bean class="com.manning.sbia.ch06.file.ProductsLineAggregator">
                <property name="aggregators">
                    <map>
                        <entry key="com.manning.sbia.ch06.BookProduct" value-ref="bookProductLineAggregator" />
                        <entry key="com.manning.sbia.ch06.MobilePhoneProduct" value-ref="mobileProductLineAggregator" />
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="bookProductLineAggregator" class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
        <property name="fieldExtractor">
            <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                <property name="names" value="id,price,name,publisher" />
            </bean>
        </property>
        <property name="format" value="%-9s%6.2f%-30s%-12s" />
    </bean>

    <bean id="mobileProductLineAggregator" class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
        <property name="fieldExtractor">
            <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                <property name="names" value="id,price,name,manufacturer" />
            </bean>
        </property>
        <property name="format" value="%-9s%6.2f%-30s%-12s" />
    </bean>

</beans>
