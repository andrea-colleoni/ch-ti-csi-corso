<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<import resource="../batch-infrastructure-test.xml" />

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="5" />
	</bean>
	
	<batch:job id="parallelImportProductsJob">
		<!-- batch:step id="decompress" next="readWrite">
			<batch:tasklet ref="decompressTasklet" />
		</batch:step -->
		<batch:split id="readWrite" task-executor="taskExecutor"><!-- next="moveHandledFiles" -->
			<batch:flow>
				<batch:step id="readWriteBookProduct">
					<batch:tasklet>
						<batch:chunk reader="bookProductItemReader" writer="writer" commit-interval="10"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="readWriteMobileProduct">
					<batch:tasklet>
						<batch:chunk reader="mobileProductItemReader" writer="writer" commit-interval="10"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
		</batch:split>
		<!-- batch:step id="moveHandledFiles">
			<batch:tasklet ref="moveHandleFilesTasklet" />
		</batch:step -->
	</batch:job>

	<!-- batch:step id="genericReadWrite">
		<batch:tasklet>
			<batch:chunk commit-interval="10">
			</batch:chunk>
		</batch:tasklet>
	</batch:step -->

	<bean id="bookProductItemReader" class="com.manning.sbia.ch13.WrappedItemReader">
		<property name="delegate" ref="bookProductItemReaderTarget"/>
	</bean>

 	<bean id="bookProductItemReaderTarget"
  		class="org.springframework.batch.item.file.FlatFileItemReader">
 		<property name="resource" value="classpath:/com/manning/sbia/ch13/input/book-products-delimited.txt"/>
		<property name="linesToSkip" value="1"/>
 		<property name="lineMapper" ref="productLineMapper"/>
 	</bean>

	<bean id="mobileProductItemReader" class="com.manning.sbia.ch13.WrappedItemReader">
		<property name="delegate" ref="mobileProductItemReaderTarget"/>
	</bean>

 	<bean id="mobileProductItemReaderTarget"
  		class="org.springframework.batch.item.file.FlatFileItemReader">
 		<property name="resource" value="classpath:/com/manning/sbia/ch13/input/mobile-products-delimited.txt"/>
		<property name="linesToSkip" value="1"/>
 		<property name="lineMapper" ref="productLineMapper"/>
 	</bean>

 	<bean id="productLineMapper"
 		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
 		<property name="lineTokenizer" ref="productLineTokenizer"/>
 		<property name="fieldSetMapper" ref="productFieldSetMapper"/>
 	</bean>

	<bean id=" productLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
 		<property name="delimiter" value=","/>
 		<property name="names" value="id,name,description,specific,price"/>
	</bean>

	<bean id="productFieldSetMapper"
		class="com.manning.sbia.ch13.ProductFieldSetMapper"/>

	<bean id="writer" class="com.manning.sbia.ch13.DummyProductWriter" scope="step"/>
</beans>
