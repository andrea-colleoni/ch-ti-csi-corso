<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<batch:job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<step id="mapImportToJobInstanceStep" next="readWriteProductsStep">
			<tasklet ref="mapImportToJobInstanceTasklet" />
		</step>
		<step id="readWriteProductsStep" >
			<tasklet>
				<chunk reader="productsReader" writer="productsWriter" commit-interval="3" />
			</tasklet>
		</step>
	</batch:job>
	
	<bean id="mapImportToJobInstanceTasklet" class="com.manning.sbia.ch11.batch.ImportToJobInstanceMappingTasklet"
		scope="step">
		<property name="productImportId" value="#{jobParameters['importId']}" />
		<property name="productImportRepository" ref="productImportRepository" />
	</bean>
	
	<bean id="productsReader" class="org.springframework.batch.item.xml.StaxEventItemReader"
		scope="step">
		<property name="unmarshaller" ref="marshaller" />
		<property name="fragmentRootElementName" value="product" />
		<property name="resource" value="file:#{jobParameters['inputFile']}" />
	</bean>
	
	<bean id="productsWriter" class="com.manning.sbia.ch01.batch.ProductJdbcItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>

</beans>
